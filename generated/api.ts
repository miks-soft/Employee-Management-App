/* eslint-disable max-lines */
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/v1/activity-times': {
    /** @description Добавление потраченного времени в приложениях */
    post: operations['AppHttpControllersApiV1ActivityTimeController::store'];
  };
  '/api/v1/activity-times/{id}': {
    /** @description Изменить запись о потраченном времени */
    put: operations['AppHttpControllersApiV1ActivityTimeController::update'];
  };
  '/api/v1/auth/login': {
    /**
     * Sign in
     * @description Login by email, password
     */
    post: operations['authLogin'];
  };
  '/api/v1/auth/logout': {
    /** @description Logout */
    post: {
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: components['schemas']['logout'];
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/auth/send-reset-password-code': {
    /** @description Send password reset code to email */
    post: {
      /** @description Pass user email */
      requestBody: {
        content: {
          'application/json': {
            /**
             * Format: email
             * @example manager-user@gmail.com
             */
            email: string;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: components['schemas']['send-password-reset-code'];
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/auth/reset-password': {
    /** @description Reset password */
    post: {
      requestBody: {
        content: {
          'application/json': {
            /**
             * Format: email
             * @example some-user@gmail.com
             */
            email: string;
            /**
             * Format: password
             * @example qweqwe
             */
            password: string;
            /**
             * Format: password
             * @example qweqwe
             */
            password_confirmation: string;
            /** @example 7F7JJFsl */
            password_reset_code: string;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: components['schemas']['reset-password'];
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/auth/change-password/{user}': {
    /** @description Change password */
    put: {
      parameters: {
        path: {
          /** @description User uuid */
          user: string;
        };
      };
      requestBody: {
        content: {
          'application/json': {
            /**
             * Format: password
             * @example qweqwe
             */
            password: string;
            /**
             * Format: password
             * @example qweqwe
             */
            password_confirmation?: string;
            /** @example true */
            send_email?: boolean;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: Record<string, never>;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/auth/set-new-password': {
    /** @description Set new password */
    put: operations['AppHttpControllersApiV1AuthAuthController::setNewPassword'];
  };
  '/api/v1/auth/switch-block/{user}': {
    /** @description Block and unblock user by admin */
    put: {
      parameters: {
        path: {
          /** @description User uuid */
          user: string;
        };
      };
      requestBody: {
        content: {
          'application/json': {
            /** @example true */
            is_blocked?: boolean;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: Record<string, never>;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/company/list': {
    /** @description Список компаний для фильтра */
    get: {
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /**
                 * @description id
                 * @example 01788bf0-bf24-446e-abac-e517652cfc5f
                 */
                id?: string;
                /**
                 * @description title
                 * @example Название компании
                 */
                title?: string;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/company': {
    /** @description Show company list */
    get: {
      parameters: {
        query: {
          /** @description page number */
          page?: number;
          /** @description elements count on page */
          pageCount?: number;
          /** @description sort field */
          sortField?: string;
          /** @description sort by asc or desc */
          sortBy?: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              /** @example 1 */
              current_page?: string;
              data?: {
                /** @example Company example */
                title?: string;
                /** @example Address example */
                address?: string;
                /** @example 88005553535 */
                phone?: string;
                /** @example 88005553535 */
                contact_phone?: string;
                /** @example Contact FIO for company */
                contact_fio?: string;
                /** @example Email example */
                email?: Record<string, never>;
                /** @example Description example */
                description?: string;
                /** @example ОГРН/ОГРНИП */
                ogrn_ogrnip?: string;
                /** @example ИНН */
                inn?: string;
                /** @example КПП */
                kpp?: string;
                /**
                 * @description Статус блокировки компании
                 * @example 0
                 */
                is_blocked?: Record<string, never>;
                /**
                 * @description Количество работников
                 * @example 4
                 */
                worker_count?: number;
                /**
                 * @description Количество проектов
                 * @example 7
                 */
                active_project_count?: number;
                /**
                 * @description Количество завершенных проектов
                 * @example 7
                 */
                complete_project_count?: number;
                manager?: {
                  /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                  id?: string;
                  /** @example Prof. Lupe Considine */
                  name?: string;
                  /** @example kody.leffler@example.org */
                  email?: string;
                  /** @example manager */
                  role?: string;
                  /** @example 0 */
                  is_blocked?: string;
                  /** @example null */
                  image?: string;
                  /** @example null */
                  description?: string;
                  /** @example null */
                  phone?: string;
                };
                specialities?: {
                  /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                  id?: string;
                  /** @example Машинист крана */
                  name?: string;
                  /** @example Et quia suscipit consequatur id et eaque sit. Odio omnis odit natus repellendus quas sit placeat. */
                  description?: string;
                };
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
    /** @description Show company list */
    post: {
      requestBody: {
        content: {
          'application/json': components['schemas']['company-data'];
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: components['schemas']['company-data'];
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/company/{company}': {
    /** @description Show company by uuid */
    get: {
      parameters: {
        path: {
          /** @description Company uuid */
          company: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: components['schemas']['company-data'];
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
    /** @description Update company */
    put: {
      parameters: {
        path: {
          /** @description Company uuid */
          company: string;
        };
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['company-data-update'];
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: components['schemas']['company-data-update'];
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
    /** @description Delete company by uuid */
    delete: {
      parameters: {
        path: {
          /** @description Company uuid */
          company: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              message?: boolean;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/company/{company}/status': {
    /** @description Обновление статуса компании */
    put: {
      parameters: {
        path: {
          /** @description company uuid */
          company: string;
        };
      };
      requestBody: {
        content: {
          'application/json': {
            /** @example 1 */
            is_blocked?: string;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              data?: {
                /** @example Company example */
                title?: string;
                /** @example Address example */
                address?: string;
                /** @example 88005553535 */
                phone?: string;
                /** @example 88005553535 */
                contact_phone?: string;
                /** @example Contact FIO for company */
                contact_fio?: string;
                /** @example Email example */
                email?: Record<string, never>;
                /** @example Description example */
                description?: string;
                /** @example ОГРН/ОГРНИП */
                ogrn_ogrnip?: string;
                /** @example ИНН */
                inn?: string;
                /** @example КПП */
                kpp?: string;
                /**
                 * @description Статус блокировки компании
                 * @example 0
                 */
                is_blocked?: Record<string, never>;
                /**
                 * @description Количество работников
                 * @example 4
                 */
                worker_count?: number;
                /**
                 * @description Количество проектов
                 * @example 7
                 */
                active_project_count?: number;
                /**
                 * @description Количество завершенных проектов
                 * @example 7
                 */
                complete_project_count?: number;
                manager?: {
                  /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                  id?: string;
                  /** @example Prof. Lupe Considine */
                  name?: string;
                  /** @example kody.leffler@example.org */
                  email?: string;
                  /** @example manager */
                  role?: string;
                  /** @example 0 */
                  is_blocked?: string;
                  /** @example null */
                  image?: string;
                  /** @example null */
                  description?: string;
                  /** @example null */
                  phone?: string;
                };
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/employee': {
    /** @description Show employees list */
    get: {
      parameters: {
        query: {
          /**
           * @description Специальность исполнителя (id специальности)
           * @example 46a3562e-7316-4f4f-a0ea-124c01f0d2f9
           */
          speciality?: string;
          /**
           * @description id проекта
           * @example 0177bf3e-2632-4c10-9c29-f1a873493fb7
           */
          project?: string;
          /**
           * @description id компании
           * @example 0177bf3e-2632-4c10-9c29-f1a873493fb7
           */
          company?: string;
          /**
           * @description График работы (key)
           * @example NOT_ENOUGH_TIME
           */
          work_plan?: string;
          /**
           * @description sort by asc or desc
           * @example DESC
           */
          sortBy?: string;
          /** @description elements count on page */
          pageCount?: number;
          /** @description page number */
          page?: number;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                id?: string;
                /** @example Prof. Lupe Considine */
                name?: string;
                /** @example kody.leffler@example.org */
                email?: string;
                speciality?: {
                  /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                  id?: string;
                  /** @example Машинист крана */
                  name?: string;
                  /** @example Et quia suscipit consequatur id et eaque sit. Odio omnis odit natus repellendus quas sit placeat. */
                  description?: string;
                };
                projects?: {
                  /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                  id?: string;
                  /** @example Машинист крана */
                  title?: string;
                  plan?: {
                    /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                    id?: string;
                    /** @example DIDNT START */
                    key_const?: string;
                    /** @example Не начал работу */
                    name?: string;
                    /** @example 2021-02-16 10:31:11 */
                    created_at?: string;
                    /** @example 2021-02-16 10:31:11 */
                    updated_at?: string;
                  };
                };
                /** @example 0 */
                is_blocked?: string;
                /** @example 0 */
                image?: string;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
    /** @description Создание исполнителя */
    post: {
      requestBody: {
        content: {
          'application/json': Record<string, never>;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: components['schemas']['employee'];
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/employee/{employee}': {
    /** @description Show employee by uuid */
    get: {
      parameters: {
        path: {
          /** @description Employee uuid */
          employee: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Иванов Иван Иванович */
                name?: string;
                /** @example ivanov@gmail.com */
                email?: string;
                /** @example 3434343 */
                phone?: string;
                /** @example путь после вызова /api/v1/image/upload */
                image?: string;
                /** @example employee */
                role?: string;
                /** @example 0 */
                is_blocked?: string;
                /** @example true */
                notification?: boolean;
                /**
                 * Format: time
                 * @example 23:59:00
                 */
                notification_from?: string;
                /**
                 * Format: time
                 * @example 00:00:00
                 */
                notification_to?: string;
                /**
                 * @description all или workday
                 * @example all
                 */
                notification_type?: string;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
    /** @description Обновление Испонителя */
    put: {
      parameters: {
        path: {
          /** @description Employee uuid */
          employee: string;
        };
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['employee'];
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Иванов Иван Иванович */
                name?: string;
                /** @example ivanov@gmail.com */
                email?: string;
                /** @example 3434343 */
                phone?: string;
                /** @example путь после вызова /api/v1/image/upload */
                image?: string;
                /** @example employee */
                role?: string;
                /** @example 2021-02-16T08:33:02.000000Z */
                updated_at?: string;
                /** @example 2021-02-16T08:33:02.000000Z */
                created_at?: string;
                specialities?: Record<string, never>;
                project_status?: Record<string, never>;
                /** @example true */
                notification?: boolean;
                /**
                 * Format: time
                 * @example 16:00:00
                 */
                notification_from?: string;
                /**
                 * Format: time
                 * @example 20:00:00
                 */
                notification_to?: string;
                /**
                 * @description all или workday
                 * @example all
                 */
                notification_type?: string;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
    /** @description Delete employee by uuid */
    delete: {
      parameters: {
        path: {
          /** @description employee uuid */
          employee: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              message?: boolean;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/employee/objects': {
    /** @description Объекты на которых занят работник */
    get: {
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              /**
               * @example [
               *   {
               *     "id": 1,
               *     "title": "Dr.",
               *     "start_work": "12.01.2021",
               *     "end_work": "12.09.21",
               *     "workday_start": "07:02",
               *     "workday_end": "01:03",
               *     "payment": 2000,
               *     "even_week": {
               *       "fri": true,
               *       "mon": false,
               *       "sat": false,
               *       "sun": false,
               *       "thu": false,
               *       "tue": false,
               *       "wed": false
               *     },
               *     "odd_week": {
               *       "fri": true,
               *       "mon": true,
               *       "sat": true,
               *       "sun": true,
               *       "thu": true,
               *       "tue": true,
               *       "wed": true
               *     }
               *   }
               * ]
               */
              data?: Record<string, never>;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/employee/objects/{object}': {
    /** @description Show employee object by uuid */
    get: operations['AppHttpControllersApiV1EmployeeEmployeeObjectsController::show'];
  };
  '/api/v1/employee/objects/{object}/plan': {
    /** @description Show employee object by uuid */
    get: operations['AppHttpControllersApiV1EmployeeEmployeeObjectsController::workPlan'];
  };
  '/api/v1/employee/{employee}/free-vacancies': {
    /** @description Cписок свободных вакансий по компании конкретного работника */
    get: {
      parameters: {
        query: {
          /**
           * @description Project uuid
           * @example 0177bf3e-2632-4c10-9c29-f1a873493fb7
           */
          project?: string;
          /**
           * @description uuid вакансии
           * @example 46a3562e-7316-4f4f-a0ea-124c01f0d2f9
           */
          vacancy?: string;
          /** @description elements count on page */
          pageCount?: number;
          /** @description page number */
          page?: number;
          /**
           * @description Сортировка по названию проекта
           * @example DESC
           */
          sort?: string;
        };
        path: {
          /**
           * @description Employee uuid
           * @example 0389964a-c5fe-45fc-a255-86ad40d8f171
           */
          employee: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Монтажник */
                title?: string;
                /** @example ivanov@gmail.com */
                start_date?: string;
                /** @example 3434343 */
                end_date?: string;
                odd_week?: components['schemas']['Schedule'];
                even_week?: components['schemas']['Schedule'];
                /** @example 08:00 */
                workday_start?: Record<string, never>;
                /** @example 16:00 */
                workday_end?: Record<string, never>;
                /** @example 08:00 */
                dinner_start?: Record<string, never>;
                /** @example 16:00 */
                dinner_end?: Record<string, never>;
                project?: {
                  /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                  id?: string;
                  /** @example ООО Компания */
                  title?: string;
                  /** @example ул. Нешина */
                  address?: string;
                };
                speciality?: Record<string, never>;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/employee/{employee}/free-vacancies-list': {
    /** @description Cписок свободных вакансий по компании конкретного работника (фильтр) */
    get: {
      parameters: {
        path: {
          /**
           * @description Employee uuid
           * @example 0389964a-c5fe-45fc-a255-86ad40d8f171
           */
          employee: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Монтажник */
                title?: string;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/employee/{employee}/projects': {
    /** @description Show employee projects */
    get: {
      parameters: {
        query: {
          /**
           * @description uid специальности
           * @example 0389964a-c5fe-45fc-a255-86ad40d8f171
           */
          speciality?: string;
          /**
           * @description статус проекта
           * @example 1
           */
          project_status?: number;
          /** @description page number */
          page?: number;
          /** @description sort project title by asc or desc */
          sort?: string;
        };
        path: {
          /** @description employee id */
          employee: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Монтажник */
                title?: string;
                /** @example 1000 */
                radius?: string;
                /** @example 48.51 */
                lat?: string;
                /** @example 32.29 */
                lng?: string;
                /** @example ivanov@gmail.com */
                start_date?: string;
                /** @example 3434343 */
                end_date?: string;
                odd_week?: components['schemas']['Schedule'];
                even_week?: components['schemas']['Schedule'];
                /** @example 08:00 */
                workday_start?: Record<string, never>;
                /** @example 16:00 */
                workday_end?: Record<string, never>;
                /** @example 08:00 */
                dinner_start?: Record<string, never>;
                /** @example 16:00 */
                dinner_end?: Record<string, never>;
                specialities?: {
                  /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                  id?: string;
                  /** @example Машинист крана */
                  name?: string;
                  /** @example Et quia suscipit consequatur id et eaque sit. Odio omnis odit natus repellendus quas sit placeat. */
                  description?: string;
                };
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/employee/{employee}/plan': {
    /** @description Show employee projects */
    get: {
      parameters: {
        query: {
          /** @description Project uuid */
          project?: string;
          /**
           * @description date from
           * @example 2021-01-18
           */
          date_from?: string;
          /**
           * @description date to
           * @example 2021-01-31
           */
          date_to?: string;
          /** @description elements count on page */
          pageCount?: number;
          /** @description page number */
          page?: number;
        };
        path: {
          /** @description Employee uuid */
          employee: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              data?: Record<string, never>;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/employee/statistics': {
    /** @description Статистика по количеству проектов, заработанным деньгам */
    get: {
      parameters: {
        query: {
          /**
           * @description С какой даты
           * @example 2021-01-12
           */
          date_from?: string;
          /**
           * @description По какую дату
           * @example 2021-07-12
           */
          date_to: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              /**
               * @example {
               *   "project_done": "12",
               *   "accrued_salaries": "123 123",
               *   "output_in_hours": "15",
               *   "count_days_with_fine": "10"
               * }
               */
              data?: Record<string, never>;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/employee/specialities': {
    /** @description Список специальностей выбранных текущим исполнителем */
    get: operations['AppHttpControllersApiV1EmployeeSpecialityController::index'];
  };
  '/api/v1/employee/{employee_id}/specialities': {
    /** @description Список специальностей по сотруднику */
    get: operations['AppHttpControllersApiV1EmployeeSpecialityController::view'];
    /** @description Изменить список специальностей пользователя */
    put: operations['AppHttpControllersApiV1EmployeeSpecialityController::update'];
    /** @description Выбрать специальность исполнителем */
    post: operations['AppHttpControllersApiV1EmployeeSpecialityController::store'];
  };
  '/api/v1/employee/specialities/{speciality}': {
    /** @description Удаление выбраной специальности */
    delete: operations['AppHttpControllersApiV1EmployeeSpecialityController::destroy'];
  };
  '/api/v1/steps': {
    /** @description Save steps by employee */
    post: {
      requestBody: {
        content: {
          'application/json': {
            data?: components['schemas']['step'];
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              /** @example true */
              data?: boolean;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/step': {
    /** @description Get detail page steps employee */
    get: {
      parameters: {
        query: {
          /**
           * @description Vacancy uuid
           * @example 3bd7a776-6e90-4bac-a6dd-460ec017abe8
           */
          vacancy_id: string;
          /**
           * @description date by filter
           * @example 2022-03-11
           */
          date?: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              /**
               * @example {
               *   "0": {
               *     "id": 1,
               *     "date_to": "2022-03-24 08:20:00",
               *     "date_from": "2022-03-24 08:30:00",
               *     "count": 200
               *   },
               *   "1": {
               *     "id": 2,
               *     "date_to": "2022-03-24 08:30:00",
               *     "date_from": "2022-03-24 08:40:00",
               *     "count": 200
               *   },
               *   "total": 400
               * }
               */
              data?: Record<string, never>;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/feedback': {
    /** @description Отправить вопрос */
    post: operations['AppHttpControllersApiV1FeedbackController::send'];
  };
  '/api/v1/managers': {
    /**
     * Регистрация менеджера
     * @description Register manager
     */
    post: {
      requestBody: {
        content: {
          'application/json': {
            /** @example Иванов Иван Иванович */
            name?: string;
            /** @example example@example.by */
            email?: string;
            /** @example Example */
            company?: string;
            /**
             * Format: password
             * @example 123123
             */
            password?: string;
            /**
             * Format: password
             * @example 123123
             */
            password_confirmation?: string;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: components['schemas']['login'];
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/message': {
    /** @description Список чатов пользователя */
    get: operations['AppHttpControllersApiV1MessageIndexController::index'];
    /** @description Отправить сообщение */
    post: operations['AppHttpControllersApiV1MessageIndexController::create'];
  };
  '/api/v1/message/project/{project_id}': {
    /** @description Просмотр чата проекта */
    get: operations['AppHttpControllersApiV1MessageProjectController::view'];
  };
  '/api/v1/message/user/{user_id}': {
    /** @description Просмотр чата с пользователем */
    get: operations['AppHttpControllersApiV1MessageUserController::view'];
  };
  '/api/v1/project/plan': {
    /** @description Проекты пользователя на текущий день */
    get: operations['AppHttpControllersApiV1ProjectEmployeeProjectsTodayPlan::index'];
  };
  '/api/v1/project/plan/{plan}': {
    /** @description Статистика по проекту */
    get: operations['AppHttpControllersApiV1ProjectEmployeeProjectsTodayPlan::show'];
  };
  '/api/v1/project/list': {
    /** @description Список проектов для фильтра */
    get: {
      parameters: {
        query: {
          /**
           * @description id компании
           * @example 46a3562e-7316-4f4f-a0ea-124c01f0d2f9
           */
          company?: string;
          /**
           * @description uid работника
           * @example 0389964a-c5fe-45fc-a255-86ad40d8f171
           */
          employee?: string;
          /**
           * @description uid пользователя
           * @example 0389964a-c5fe-45fc-a255-86ad40d8f171
           */
          user?: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Лаборатория Х64 */
                title?: string;
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                user_id?: string;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/project': {
    /** @description Show project list */
    get: {
      parameters: {
        query: {
          /**
           * @description id компании
           * @example 46a3562e-7316-4f4f-a0ea-124c01f0d2f9
           */
          company?: string;
          /** @description elements count on page */
          pageCount?: number;
          /** @description page number */
          page?: number;
          /** @description sort title by asc or desc */
          sort?: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Лаборатория Х64 */
                title?: string;
                /** @example д.12 кв.14 */
                address?: string;
                /** @example Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat */
                description?: string;
                /** @example 2020-12-16 */
                start_work?: string;
                /** @example 2020-12-19 */
                end_work?: string;
                /** @example 12 */
                radius?: number;
                /** @example 2021-02-16T08:40:35.000000Z */
                updated_at?: number;
                /** @example 2021-02-16T08:40:35.000000Z */
                created_at?: number;
                /** @example 12 */
                lat?: string;
                /** @example 12 */
                lng?: string;
                /** @example 12 */
                sum?: string;
                /** @example 0 */
                is_complete?: string;
                /** @example 0 */
                vacancies_with_workers_count?: string;
                /** @example 0 */
                vacancies_without_workers_count?: string;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
    /** @description Создание проекта */
    post: {
      requestBody: {
        content: {
          'application/json': components['schemas']['project'];
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Лаборатория Х64 */
                title?: string;
                /** @example д.12 кв.14 */
                address?: string;
                /** @example Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat */
                description?: string;
                /** @example 2020-12-16 */
                start_work?: string;
                /** @example 2020-12-19 */
                end_work?: string;
                /** @example 12 */
                radius?: number;
                /** @example 2021-02-16T08:40:35.000000Z */
                updated_at?: number;
                /** @example 2021-02-16T08:40:35.000000Z */
                created_at?: number;
                /** @example 12 */
                lat?: string;
                /** @example 12 */
                lng?: string;
                /** @example 0 */
                have_worker?: string;
                /** @example 0 */
                need_worker?: string;
                vacancy?: Record<string, never>;
                company?: Record<string, never>;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/project/{project}': {
    /** @description Show project by uuid */
    get: {
      parameters: {
        path: {
          /** @description Project uuid */
          project: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Лаборатория Х64 */
                title?: string;
                /** @example д.12 кв.14 */
                address?: string;
                /** @example Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat */
                description?: string;
                /** @example 2020-12-16 */
                start_work?: string;
                /** @example 2020-12-19 */
                end_work?: string;
                /** @example 12 */
                radius?: number;
                /** @example 2021-02-16T08:40:35.000000Z */
                updated_at?: number;
                /** @example 2021-02-16T08:40:35.000000Z */
                created_at?: number;
                /** @example 12 */
                lat?: string;
                /** @example 12 */
                lng?: string;
                /** @example 0 */
                have_worker?: string;
                /** @example 0 */
                need_worker?: string;
                vacancy?: Record<string, never>;
                company?: Record<string, never>;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
    /** @description Обновление проекта */
    put: {
      parameters: {
        path: {
          /** @description Project uuid */
          project: string;
        };
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['project'];
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Лаборатория Х64 */
                title?: string;
                /** @example д.12 кв.14 */
                address?: string;
                /** @example Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat */
                description?: string;
                /** @example 2020-12-16 */
                start_work?: string;
                /** @example 2020-12-19 */
                end_work?: string;
                /** @example 12 */
                radius?: number;
                /** @example 2021-02-16T08:40:35.000000Z */
                updated_at?: number;
                /** @example 2021-02-16T08:40:35.000000Z */
                created_at?: number;
                /** @example 12 */
                lat?: string;
                /** @example 12 */
                lng?: string;
                /** @example 0 */
                have_worker?: string;
                /** @example 0 */
                need_worker?: string;
                vacancy?: Record<string, never>;
                company?: Record<string, never>;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
    /** @description Delete project by uuid */
    delete: {
      parameters: {
        path: {
          /** @description project uuid */
          project: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              message?: boolean;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/project/{project}/vacancies': {
    /** @description Show vacancy list */
    get: {
      parameters: {
        query: {
          /** @description elements count on page */
          pageCount?: number;
          /** @description page number */
          page?: number;
          /** @description speciality id */
          speciality?: string;
          /** @description payment type */
          payment_type?: string;
          /** @description sort field */
          sortField?: string;
          /** @description sort by asc or desc */
          sortBy?: string;
        };
        path: {
          /** @description project id */
          project: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Монтажник */
                title?: string;
                /** @example ivanov@gmail.com */
                start_date?: string;
                /** @example 3434343 */
                end_date?: string;
                odd_week?: components['schemas']['Schedule'];
                even_week?: components['schemas']['Schedule'];
                /** @example 08:00 */
                workday_start?: Record<string, never>;
                /** @example 16:00 */
                workday_end?: Record<string, never>;
                /** @example 08:00 */
                dinner_start?: Record<string, never>;
                /** @example 1 */
                show_stavka?: Record<string, never>;
                /** @example 16:00 */
                dinner_end?: Record<string, never>;
                specialities?: {
                  /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                  id?: string;
                  /** @example Машинист крана */
                  name?: string;
                  /** @example Et quia suscipit consequatur id et eaque sit. Odio omnis odit natus repellendus quas sit placeat. */
                  description?: string;
                };
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/project/{project}/status': {
    /** @description Обновление статуса проекта */
    put: {
      parameters: {
        path: {
          /** @description Project uuid */
          project: string;
        };
      };
      requestBody: {
        content: {
          'application/json': {
            /** @example 1 */
            is_complete?: string;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example 1 */
                is_complete?: Record<string, never>;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/project/{project}/sum': {
    /** @description Обновление суммы проекта */
    put: {
      parameters: {
        path: {
          /** @description Project uuid */
          project: string;
        };
      };
      requestBody: {
        content: {
          'application/json': {
            /** @example 100 */
            sum?: string;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example 100 */
                sum?: Record<string, never>;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/search': {
    /** @description Список задач пользователя */
    get: operations['AppHttpControllersApiV1SearchController::index'];
  };
  '/api/v1/search/chat': {
    /** @description Поиск нового чата */
    get: operations['AppHttpControllersApiV1SearchController::chat'];
  };
  '/api/v1/specialities': {
    /** @description Список специальностей c пагинацией */
    get: operations['AppHttpControllersApiV1SpecialityController::index'];
    /** @description Добавление специальности администратором или менеджером компании */
    post: operations['AppHttpControllersApiV1SpecialityController::store'];
  };
  '/api/v1/specialities/list': {
    /** @description Список специальностей для выпадающего списка */
    get: {
      parameters: {
        query: {
          /** @description запрос поиска */
          query?: string;
          /** @description компания */
          company?: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: components['schemas']['speciality'][];
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/specialities/{speciality}': {
    /** @description Просмотр специальности */
    get: operations['AppHttpControllersApiV1SpecialityController::show'];
    /** @description Редактирование специальности */
    put: operations['AppHttpControllersApiV1SpecialityController::update'];
    /** @description Удаление специальности */
    delete: operations['AppHttpControllersApiV1SpecialityController::destroy'];
  };
  '/api/v1/tasks': {
    /** @description Список задач пользователя */
    get: operations['AppHttpControllersApiV1TaskController::index'];
    /** @description Добавление новой задачи */
    post: operations['AppHttpControllersApiV1TaskController::store'];
  };
  '/api/v1/tasks/{id}/done': {
    /** @description Пометить задачу как выполненную */
    post: operations['AppHttpControllersApiV1TaskController::done'];
  };
  '/api/v1/tasks/{id}/cancel': {
    /** @description Убрать отметку о выполненной задачи */
    post: operations['AppHttpControllersApiV1TaskController::cancel'];
  };
  '/api/v1/tasks/{id}': {
    /** @description Просмотр задачи */
    get: operations['AppHttpControllersApiV1TaskController::show'];
    /** @description Редактировать задачу */
    put: operations['AppHttpControllersApiV1TaskController::update'];
    /** @description Удаление задачи */
    delete: operations['AppHttpControllersApiV1TaskController::destroy'];
  };
  '/api/v1/image/upload': {
    /** @description Загрузить изображение */
    post: {
      requestBody: {
        content: {
          'multipart/form-data': {
            /**
             * Format: file
             * @description file to upload
             */
            image?: Record<string, never>;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              data?: Record<string, never>;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/user/current': {
    /** @description Get current user */
    get: {
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              data?: {
                /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                id?: string;
                /** @example Prof. Lupe Considine */
                name?: string;
                /** @example kody.leffler@example.org */
                email?: string;
                /** @example manager */
                role?: string;
                /** @example 0 */
                is_blocked?: string;
                /** @example null */
                image?: string;
                /** @example Text example */
                description?: string;
                /** @example +375432345678 */
                phone?: string;
                /** @example true */
                notification?: boolean;
                /**
                 * Format: time
                 * @example 23:59:00
                 */
                notification_from?: string;
                /**
                 * Format: time
                 * @example 00:00:00
                 */
                notification_to?: string;
                /**
                 * @description all или workday
                 * @example all
                 */
                notification_type?: string;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/user/notification': {
    /** @description Change notification settings */
    put: {
      requestBody: {
        content: {
          'application/json': {
            /** @example true */
            notification: boolean;
            /**
             * Format: time
             * @example 23:59:00
             */
            notification_from?: string;
            /**
             * Format: time
             * @example 00:00:00
             */
            notification_to?: string;
            /**
             * @description all или workday
             * @example all
             */
            notification_type?: string;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: boolean;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/user': {
    /** @description Change current user */
    put: {
      requestBody: {
        content: {
          'application/json': {
            /** @example E4Ir8bZE67tZpvYxtXjH3IoMpcfJ3A1svNPbKZP7gd4oxDdqriWyrh4tBPls */
            device_token?: string;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: boolean;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/users/dinners': {
    /** @description Установсть обед */
    post: operations['AppHttpControllersApiV1UserDinnerController::store'];
  };
  '/api/v1/users/{id}/activity/statistics': {
    /** @description Статистика по затраченному времени */
    get: operations['AppHttpControllersApiV1UserStatisticsController::activities'];
  };
  '/api/v1/users/{id}/activity/statistics/total': {
    /** @description Статистика по затраченному времени */
    get: operations['AppHttpControllersApiV1UserStatisticsController::activitiesTotal'];
  };
  '/api/v1/vacancy/{vacancy}/add-employee': {
    /** @description Назначение работника */
    put: {
      parameters: {
        path: {
          /** @description vacancy uuid */
          vacancy: string;
        };
      };
      requestBody: {
        content: {
          'application/json': {
            /** @example 1 */
            worker_id?: string;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/vacancy/{vacancy}/delete-employee': {
    /** @description Назначение работника */
    put: {
      parameters: {
        path: {
          /** @description vacancy uuid */
          vacancy: string;
        };
      };
      requestBody: {
        content: {
          'application/json': {
            /** @example 1 */
            worker_id?: string;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/vacancy/{vacancy}/status': {
    /** @description Изменение видимости ставки вакансии */
    put: {
      parameters: {
        path: {
          /** @description vacancy uuid */
          vacancy: string;
        };
      };
      requestBody: {
        content: {
          'application/json': {
            /** @example true */
            show_stavka?: string;
          };
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example 1 */
                show_stavka?: string;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/vacancy': {
    /** @description Список активных вакансий для фильтра */
    get: operations['AppHttpControllersApiV1VacancyVacancyController::index'];
    /** @description Создание вакансии */
    post: {
      requestBody: {
        content: {
          'application/json': components['schemas']['vacancy'];
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Монтажник */
                title?: string;
                /** @example ivanov@gmail.com */
                start_date?: string;
                /** @example 3434343 */
                end_date?: string;
                odd_week?: components['schemas']['Schedule'];
                even_week?: components['schemas']['Schedule'];
                /** @example 08:00 */
                workday_start?: Record<string, never>;
                /** @example 16:00 */
                workday_end?: Record<string, never>;
                /** @example 08:00 */
                dinner_start?: Record<string, never>;
                /** @example 16:00 */
                dinner_end?: Record<string, never>;
                /** @example 644 */
                payment?: Record<string, never>;
                /** @example 0 */
                pay_by_hours?: Record<string, never>;
                /** @example 0 */
                piece_work_payment?: Record<string, never>;
                /** @example 0 */
                show_stavka?: Record<string, never>;
                /** @example 2021-02-16T08:33:02.000000Z */
                recruitment_date?: Record<string, never>;
                specialities?: {
                  /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                  id?: string;
                  /** @example Машинист крана */
                  name?: string;
                  /** @example Et quia suscipit consequatur id et eaque sit. Odio omnis odit natus repellendus quas sit placeat. */
                  description?: string;
                };
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/vacancy/list': {
    /** @description Список вакансий для выпадающего списка */
    get: {
      parameters: {
        query: {
          /** @description Company ID */
          company?: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Монтажник */
                title?: string;
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/vacancy/{vacancy}': {
    /** @description Show vacancy by uuid */
    get: {
      parameters: {
        path: {
          /** @description Vacancy uuid */
          vacancy: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Монтажник */
                title?: string;
                /** @example ivanov@gmail.com */
                start_date?: string;
                /** @example 3434343 */
                end_date?: string;
                odd_week?: components['schemas']['Schedule'];
                even_week?: components['schemas']['Schedule'];
                /** @example 08:00 */
                workday_start?: Record<string, never>;
                /** @example 16:00 */
                workday_end?: Record<string, never>;
                /** @example 08:00 */
                dinner_start?: Record<string, never>;
                /** @example 16:00 */
                dinner_end?: Record<string, never>;
                /** @example 644 */
                payment?: Record<string, never>;
                /** @example 0 */
                pay_by_hours?: Record<string, never>;
                /** @example 0 */
                piece_work_payment?: Record<string, never>;
                /** @example 0 */
                show_stavka?: Record<string, never>;
                /** @example 2021-02-16T08:33:02.000000Z */
                recruitment_date?: Record<string, never>;
                specialities?: {
                  /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                  id?: string;
                  /** @example Машинист крана */
                  name?: string;
                  /** @example Et quia suscipit consequatur id et eaque sit. Odio omnis odit natus repellendus quas sit placeat. */
                  description?: string;
                };
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
    /** @description Обновление вакансии */
    put: {
      parameters: {
        path: {
          /** @description vacancy uuid */
          vacancy: string;
        };
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['vacancy'];
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              success?: boolean;
              data?: {
                /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
                id?: string;
                /** @example Монтажник */
                title?: string;
                /** @example ivanov@gmail.com */
                start_date?: string;
                /** @example 3434343 */
                end_date?: string;
                odd_week?: components['schemas']['Schedule'];
                even_week?: components['schemas']['Schedule'];
                /** @example 08:00 */
                workday_start?: Record<string, never>;
                /** @example 16:00 */
                workday_end?: Record<string, never>;
                /** @example 08:00 */
                dinner_start?: Record<string, never>;
                /** @example 16:00 */
                dinner_end?: Record<string, never>;
                /** @example 644 */
                payment?: Record<string, never>;
                /** @example 0 */
                pay_by_hours?: Record<string, never>;
                /** @example 0 */
                piece_work_payment?: Record<string, never>;
                /** @example 0 */
                show_stavka?: Record<string, never>;
                /** @example 2021-02-16T08:33:02.000000Z */
                recruitment_date?: Record<string, never>;
                specialities?: {
                  /** @example 555097e1-656b-45ef-a999-59f00d660996 */
                  id?: string;
                  /** @example Машинист крана */
                  name?: string;
                  /** @example Et quia suscipit consequatur id et eaque sit. Odio omnis odit natus repellendus quas sit placeat. */
                  description?: string;
                };
              };
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
    /** @description Delete vacancy by uuid */
    delete: {
      parameters: {
        path: {
          /** @description vacancy uuid */
          vacancy: string;
        };
      };
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              /** @example true */
              message?: boolean;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/workstatus': {
    /** @description Show work status list */
    get: {
      responses: {
        /** @description successful operation */
        200: {
          content: {
            'application/json': {
              data?: Record<string, never>;
            };
          };
        };
        /** @description Bad request */
        400: never;
        /** @description Authorization information is missing or invalid. */
        401: never;
        /** @description Validation error. */
        422: never;
      };
    };
  };
  '/api/v1/worktime': {
    /** @description Статистика о времени работы по дням */
    get: operations['AppHttpControllersApiV1WorktimeController::index'];
    /** @description Добавить отработанное время */
    post: operations['AppHttpControllersApiV1WorktimeController::create'];
  };
  '/api/v1/worktime/today': {
    /** @description Статистика о времени работы сегодня */
    get: operations['AppHttpControllersApiV1WorktimeController::today'];
  };
  '/api/v1/worktime/start': {
    /** @description Начать рабочий день или продолжить после паузы */
    post: operations['AppHttpControllersApiV1WorktimeController::start'];
  };
  '/api/v1/worktime/pause': {
    /** @description Поставить паузу */
    post: operations['AppHttpControllersApiV1WorktimeController::pause'];
  };
  '/api/v1/worktime/stop': {
    /** @description Закончить рабочий день */
    post: operations['AppHttpControllersApiV1WorktimeController::stop'];
  };
  '/api/v1/worktime/area/leave': {
    /** @description Вышли из рабочей зоны */
    post: operations['AppHttpControllersApiV1WorktimeController::areaLeave'];
  };
  '/api/v1/worktime/{id}': {
    /** @description Изменить отработанное время */
    put: operations['AppHttpControllersApiV1WorktimeController::update'];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description Response after login */
    login: {
      /** @example WJJZFbwN6H2uKivqMr5Mu5MAIdkdaPbPcjWE7lxJQTDtONT8ZVqXLFrpTgUW */
      token?: string;
      /** @example manager */
      user_role?: string;
    };
    /** @description Response after sending request to reset password */
    'send-password-reset-code': {
      /** @example Mail has been sent */
      message?: string;
      /** @example 0VvD5eKC */
      reset_code?: string;
    };
    /** @description Response after reset password */
    'reset-password': {
      /** @example Password has been changed */
      message?: string;
    };
    /** @description Response after logout */
    logout: {
      /** @example Logout successfully */
      message?: string;
    };
    /** @description Create company data */
    'company-data': {
      /** @example Company example */
      title: string;
      /** @example Address example */
      address: string;
      /** @example 88005553535 */
      phone?: string;
      /** @example 88005553535 */
      contact_phone?: string;
      /** @example Contact FIO for company */
      contact_fio?: string;
      /** @example Email example */
      email: Record<string, never>;
      /** @example Password example */
      password: Record<string, never>;
      /** @example Password confirmation example */
      password_confirmation?: Record<string, never>;
      /** @example Description example */
      description?: string;
      /** @example ОГРН/ОГРНИП */
      ogrn_ogrnip?: string;
      /** @example ИНН */
      inn?: string;
      /** @example КПП */
      kpp?: string;
    };
    /** @description Update company data */
    'company-data-update': {
      /** @example Company example */
      title: string;
      /** @example Address example */
      address: string;
      /** @example 88005553535 */
      phone?: string;
      /** @example 88005553535 */
      contact_phone?: string;
      /** @example Contact FIO for company */
      contact_fio?: string;
      /** @example Email example */
      email: Record<string, never>;
      /** @example Description example */
      description?: string;
      /** @example ОГРН/ОГРНИП */
      ogrn_ogrnip?: string;
      /** @example ИНН */
      inn?: string;
      /** @example КПП */
      kpp?: string;
    };
    /** @description Employee object */
    employee: {
      /** @example Иванов Иван Иванович */
      name: string;
      /** @example ivanov@gmail.com */
      email: string;
      /** @example 3434343 */
      password: string;
      /** @example 3434343 */
      password_confirmation?: string;
      /** @example 3434343 */
      phone: string;
      /** @example 2021-02-03 */
      expiration_date_contract?: string;
      /** @example 2021-02-03 */
      expiration_date_medical?: string;
      /** @example true */
      hide_statistic?: boolean;
      /** @example путь после вызова /api/v1/image/upload */
      image?: string;
      /** @example true */
      notification?: boolean;
      /**
       * Format: time
       * @example 23:59:00
       */
      notification_from?: string;
      /**
       * Format: time
       * @example 00:00:00
       */
      notification_to?: string;
      /**
       * @description all или workday
       * @example all
       */
      notification_type?: string;
    };
    /** @description Project object */
    project: {
      /** @example Жилой дом */
      title: string;
      /** @example 1 */
      project_status: boolean;
      /** @example д.12 кв.14 */
      address: string;
      /** @example Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat */
      description?: string;
      /** @example 2020-12-16 */
      start_work?: string;
      /** @example 2020-12-19 */
      end_work?: string;
      /** @example 12 */
      radius?: number;
      /** @example 12 */
      lat?: string;
      /** @example 12 */
      lng?: string;
    };
    /** @description Speciality object */
    speciality: {
      /** @example a6c72f2b-6a99-4aac-978e-7917edb0c776 */
      id?: string;
      /** @example Lorem ipsum dolor sit amet */
      name: string;
      /** @example Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat */
      description?: string;
    };
    /** @description Speciality object */
    speciality_teaser: {
      /** @example a6c72f2b-6a99-4aac-978e-7917edb0c776 */
      id?: string;
      /** @example Lorem ipsum dolor sit amet */
      name: string;
    };
    /** @description Speciality object */
    speciality_with_projects: {
      /** @example a6c72f2b-6a99-4aac-978e-7917edb0c776 */
      id?: string;
      /** @example Lorem ipsum dolor sit amet */
      name: string;
      /** @example Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat */
      description?: string;
      projects?: {
        /** @example a6c72f2b-6a99-4aac-978e-7917edb0c776 */
        id?: string;
        /** @example a6c72f2b-6a99-4aac-978e-7917edb0c776 */
        title?: string;
      }[];
      users?: {
        /** @example a6c72f2b-6a99-4aac-978e-7917edb0c776 */
        id?: string;
        /** @example Lorem Ipsum */
        name?: string;
        /** @example /storage/uploads/profile/1624953030.png */
        image?: string;
      }[];
    };
    /** @description Steps object */
    step: {
      /** @example 2022-03-11T08:20:00 */
      date_to?: string;
      /** @example 3bd7a776-6e90-4bac-a6dd-460ec017abe8 */
      vacancy_id?: string;
      /** @example 2022-03-11T08:30:00 */
      date_from?: string;
      /** @example 200 */
      count?: number;
      /** @example 40.71727401 */
      latitude?: Record<string, never>;
      /** @example -74.00898606 */
      longitude?: Record<string, never>;
    }[];
    /** @description Task object */
    task: {
      /**
       * @description Class Task
       * @example a6c72f2b-6a99-4aac-978e-7917edb0c776
       */
      id?: string;
      /**
       * @description Class Task
       * @example Lorem ipsum dolor sit amet
       */
      name: string;
      /**
       * @description Class Task
       * @example 3303cfc9-3e1d-11eb-89e0-0242ac180004
       */
      project_id?: string;
      /**
       * @description Class Task
       * @example 2020-12-16T07:00:00.000000Z
       */
      start_date?: string;
      /**
       * @description Class Task
       * @example 2020-12-16T08:00:00.000000Z
       */
      end_date?: string;
    };
    Schedule: {
      /** @example true */
      mon?: boolean;
      /** @example true */
      tue?: boolean;
      /** @example true */
      wed?: boolean;
      /** @example true */
      thu?: boolean;
      /** @example true */
      fri?: boolean;
      /** @example true */
      sat?: boolean;
      /** @example true */
      sun?: boolean;
    };
    /** @description Vacancy object */
    vacancy: {
      /** @example Менеджер */
      title: string;
      /** @example false */
      disable_time_check?: boolean;
      /** @example 12 */
      payment?: Record<string, never>;
      /** @example true */
      pay_by_hours?: boolean;
      /** @example false */
      piece_work_payment?: boolean;
      odd_week?: components['schemas']['Schedule'];
      even_week?: components['schemas']['Schedule'];
      /** @example 08:00 */
      workday_start?: Record<string, never>;
      /** @example 16:00 */
      workday_end?: Record<string, never>;
      /** @example 08:00 */
      dinner_start?: Record<string, never>;
      /** @example 16:00 */
      dinner_end?: Record<string, never>;
      /** @example 031a7b53-3aa1-4bb5-bf88-d0864e9678f5 */
      project_id?: string;
      /** @example f080744c-7392-41c7-930b-d51f615bcc39 */
      speciality_id?: string;
    };
    /** @description Worktime object */
    worktime: {
      /**
       * @description Class Worktime
       * @example a6c72f2b-6a99-4aac-978e-7917edb0c776
       */
      id?: string;
      /**
       * @description Class Worktime
       * @example 3303cfc9-3e1d-11eb-89e0-0242ac180004
       */
      vacancy_id?: string;
      /**
       * @description Class Worktime
       * @example 3303cfc9-3e1d-11eb-89e0-0242ac180004
       */
      user_id?: string;
      /**
       * @description Class Worktime
       * @example end
       */
      stop_type?: string;
      /**
       * @description Class Worktime
       * @example 2020-12-16T07:00:00.000000Z
       */
      start_date?: string;
      /**
       * @description Class Worktime
       * @example 2020-12-16T07:00:00.000000Z
       */
      end_date?: string;
      /**
       * @description Class Worktime
       * @example 333
       */
      count?: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {
  /** @description Добавление потраченного времени в приложениях */
  'AppHttpControllersApiV1ActivityTimeController::store': {
    requestBody: {
      content: {
        'application/json': {
          activities: Record<string, never>[];
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            /** @example true */
            data?: boolean;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Изменить запись о потраченном времени */
  'AppHttpControllersApiV1ActivityTimeController::update': {
    requestBody: {
      content: {
        'application/json': {
          is_active: boolean;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            /** @example true */
            data?: boolean;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /**
   * Sign in
   * @description Login by email, password
   */
  authLogin: {
    /** @description Pass user credentials */
    requestBody: {
      content: {
        'application/json': {
          /**
           * Format: email
           * @example superadmin@gmail.com
           */
          email: string;
          /**
           * Format: password
           * @example 3s6jYQVH
           */
          password: string;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['login'];
          };
        };
      };
      /** @description Wrong credentials response */
      422: {
        content: {
          'application/json': {
            /** @example Sorry, wrong email address or password. Please try again */
            message?: string;
          };
        };
      };
    };
  };
  /** @description Set new password */
  'AppHttpControllersApiV1AuthAuthController::setNewPassword': {
    requestBody: {
      content: {
        'application/json': {
          /** @example test@gmail.com */
          email?: string;
          /**
           * Format: password
           * @example qweqwe
           */
          old_password?: string;
          /**
           * Format: password
           * @example qweqwe
           */
          password: string;
          /**
           * Format: password
           * @example qweqwe
           */
          password_confirmation?: string;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Show employee object by uuid */
  'AppHttpControllersApiV1EmployeeEmployeeObjectsController::show': {
    parameters: {
      path: {
        /** @description employee object uuid */
        object: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            /**
             * @example {
             *   "id": "145b7892-eee9-4031-b261-b5c9bfdfe47b",
             *   "title": "Dr.",
             *   "start_work": "12.01.2021",
             *   "disable_time_check": "true",
             *   "end_work": "12.09.21",
             *   "workday_start": "07:02",
             *   "workday_end": "01:03",
             *   "description": "Описание",
             *   "even_week": {
             *     "fri": true,
             *     "mon": false,
             *     "sat": false,
             *     "sun": false,
             *     "thu": false,
             *     "tue": false,
             *     "wed": false
             *   },
             *   "odd_week": {
             *     "fri": true,
             *     "mon": true,
             *     "sat": true,
             *     "sun": true,
             *     "thu": true,
             *     "tue": true,
             *     "wed": true
             *   },
             *   "payment": "1.00",
             *   "averageTime": "03:40",
             *   "planned_time": "03:40",
             *   "pay_by_hours": 1
             * }
             */
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Show employee object by uuid */
  'AppHttpControllersApiV1EmployeeEmployeeObjectsController::workPlan': {
    parameters: {
      path: {
        /** @description employee object uuid */
        object: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            /**
             * @example [
             *   {
             *     "id": "145b7892-eee9-4031-b261-b5c9bfdfe47b",
             *     "date": "07.05.2021",
             *     "tracked_time": "187:00",
             *     "planned_time": "03:50"
             *   },
             *   {
             *     "id": "145b7892-eee9-4031-b261-b5c9bfdfe47b",
             *     "date": "06.05.2021",
             *     "tracked_time": null,
             *     "planned_time": "03:50"
             *   }
             * ]
             */
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Список специальностей выбранных текущим исполнителем */
  'AppHttpControllersApiV1EmployeeSpecialityController::index': {
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['speciality_teaser'][];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Список специальностей по сотруднику */
  'AppHttpControllersApiV1EmployeeSpecialityController::view': {
    parameters: {
      path: {
        /** @description Id сотрудника */
        employee_id: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['speciality_teaser'][];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Изменить список специальностей пользователя */
  'AppHttpControllersApiV1EmployeeSpecialityController::update': {
    parameters: {
      path: {
        /** @description Id сотрудника */
        employee_id: string;
      };
    };
    requestBody: {
      content: {
        'application/json': {
          ids: Record<string, never>[];
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Выбрать специальность исполнителем */
  'AppHttpControllersApiV1EmployeeSpecialityController::store': {
    parameters: {
      path: {
        /** @description Id сотрудника */
        employee_id: string;
      };
    };
    requestBody: {
      content: {
        'application/json': {
          /**
           * Format: number
           * @example 1
           */
          id: Record<string, never>;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Удаление выбраной специальности */
  'AppHttpControllersApiV1EmployeeSpecialityController::destroy': {
    parameters: {
      path: {
        /** @description Id специальности */
        speciality: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Отправить вопрос */
  'AppHttpControllersApiV1FeedbackController::send': {
    requestBody: {
      content: {
        'multipart/form-data': {
          subject: string;
          body: string;
          /**
           * Format: file
           * @description file to upload
           */
          attache?: string;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Список чатов пользователя */
  'AppHttpControllersApiV1MessageIndexController::index': {
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Отправить сообщение */
  'AppHttpControllersApiV1MessageIndexController::create': {
    requestBody: {
      content: {
        'application/json': {
          /**
           * Format: string
           * @example Lorem ipsum dolor sit amet
           */
          text: string;
          /**
           * Format: string
           * @example 3303cfc9-3e1d-11eb-89e0-0242ac180004
           */
          to_user_id?: string;
          /**
           * Format: string
           * @example 3303cfc9-3e1d-11eb-89e0-0242ac180004
           */
          project_id?: string;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            /** @example true */
            data?: boolean;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Просмотр чата проекта */
  'AppHttpControllersApiV1MessageProjectController::view': {
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Просмотр чата с пользователем */
  'AppHttpControllersApiV1MessageUserController::view': {
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Проекты пользователя на текущий день */
  'AppHttpControllersApiV1ProjectEmployeeProjectsTodayPlan::index': {
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            /**
             * @example [
             *   {
             *     "id": "145b7892-eee9-4031-b261-b5c9bfdfe47b",
             *     "title": "Dr.",
             *     "workday_start": "07:02",
             *     "workday_end": "01:03",
             *     "dinner_start": "11:09",
             *     "dinner_end": "09:00",
             *     "work_time": 5,
             *     "dinner_time": 2
             *   }
             * ]
             */
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Статистика по проекту */
  'AppHttpControllersApiV1ProjectEmployeeProjectsTodayPlan::show': {
    parameters: {
      path: {
        /** @description Vacancy uuid */
        plan: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            /**
             * @example {
             *   "id": "145b7892-eee9-4031-b261-b5c9bfdfe47b",
             *   "title": "Dr.",
             *   "workday_start": "07:02",
             *   "workday_end": "01:03",
             *   "dinner_start": "11:09",
             *   "dinner_end": "09:00",
             *   "work_time": "05:00",
             *   "dinner_time": "02:00",
             *   "worked_out": "00:16:14",
             *   "is_time_tracking": false
             * }
             */
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Список задач пользователя */
  'AppHttpControllersApiV1SearchController::index': {
    parameters: {
      query: {
        query: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: {
              /** @example a6c72f2b-6a99-4aac-978e-7917edb0c776 */
              id?: string;
              /** @example Lorem ipsum */
              name?: string;
              /** @example projects */
              tablename?: string;
            }[];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Поиск нового чата */
  'AppHttpControllersApiV1SearchController::chat': {
    parameters: {
      query: {
        query: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: {
              /** @example a6c72f2b-6a99-4aac-978e-7917edb0c776 */
              id?: string;
              /** @example Lorem ipsum */
              name?: string;
              /** @example /path/to/image.jpg */
              image?: string;
              /** @example users */
              tablename?: string;
            }[];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Список специальностей c пагинацией */
  'AppHttpControllersApiV1SpecialityController::index': {
    parameters: {
      query: {
        perPage?: string;
        sort?: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['speciality_with_projects'][];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Добавление специальности администратором или менеджером компании */
  'AppHttpControllersApiV1SpecialityController::store': {
    requestBody: {
      content: {
        'application/json': {
          /**
           * Format: string
           * @example Lorem ipsum dolor sit amet
           */
          name: string;
          /**
           * Format: string
           * @example Lorem ipsum dolor sit amet
           */
          description?: string;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['speciality'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Просмотр специальности */
  'AppHttpControllersApiV1SpecialityController::show': {
    parameters: {
      path: {
        /** @description Id специальности */
        speciality: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['speciality_with_projects'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Редактирование специальности */
  'AppHttpControllersApiV1SpecialityController::update': {
    parameters: {
      path: {
        /** @description Id специальности */
        speciality: string;
      };
    };
    requestBody: {
      content: {
        'application/json': {
          /**
           * Format: string
           * @example Lorem ipsum dolor sit amet
           */
          name: string;
          /**
           * Format: string
           * @example Lorem ipsum dolor sit amet
           */
          description?: string;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['speciality'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Удаление специальности */
  'AppHttpControllersApiV1SpecialityController::destroy': {
    parameters: {
      path: {
        /** @description Id специальности */
        speciality: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['speciality'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Список задач пользователя */
  'AppHttpControllersApiV1TaskController::index': {
    parameters: {
      query: {
        start_date?: string;
        end_date?: string;
        project_id?: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: {
              /** @example a6c72f2b-6a99-4aac-978e-7917edb0c776 */
              id?: string;
              /** @example Lorem ipsum */
              name?: string;
              /** @example a6c72f2b-6a99-4aac-978e-7917edb0c776 */
              project_id?: string;
              /** @example Название проекта */
              project_title?: string;
              /** @example 2020-12-16T07:00:00.000000Z */
              start_date?: string;
              /** @example 2020-12-16T07:00:00.000000Z */
              end_date?: string;
              /** @example 10 */
              status?: Record<string, never>;
            }[];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Добавление новой задачи */
  'AppHttpControllersApiV1TaskController::store': {
    requestBody: {
      content: {
        'application/json': {
          /**
           * Format: string
           * @example Lorem ipsum dolor sit amet
           */
          name: string;
          /**
           * Format: string
           * @example 3303cfc9-3e1d-11eb-89e0-0242ac180004
           */
          project_id: string;
          /**
           * Format: string
           * @example 2020-12-16 10:00:00
           */
          start_date: string;
          /**
           * Format: string
           * @example 2020-12-16 11:00:00
           */
          end_date?: string;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['task'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Пометить задачу как выполненную */
  'AppHttpControllersApiV1TaskController::done': {
    parameters: {
      path: {
        /** @description ID задачи */
        id: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['task'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Убрать отметку о выполненной задачи */
  'AppHttpControllersApiV1TaskController::cancel': {
    parameters: {
      path: {
        /** @description ID задачи */
        id: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['task'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Просмотр задачи */
  'AppHttpControllersApiV1TaskController::show': {
    parameters: {
      path: {
        /** @description ID задачи */
        id: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: {
              /** @example a6c72f2b-6a99-4aac-978e-7917edb0c776 */
              id?: string;
              /** @example Lorem ipsum */
              name?: string;
              /** @example a6c72f2b-6a99-4aac-978e-7917edb0c776 */
              project_id?: string;
              /** @example 2020-12-16T07:00:00.000000Z */
              start_date?: string;
              /** @example 2020-12-16T07:00:00.000000Z */
              end_date?: string;
              /** @example 10 */
              status?: Record<string, never>;
            };
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Редактировать задачу */
  'AppHttpControllersApiV1TaskController::update': {
    parameters: {
      path: {
        /** @description ID задачи */
        id: string;
      };
    };
    requestBody: {
      content: {
        'application/json': {
          /**
           * Format: string
           * @example Lorem ipsum dolor sit amet
           */
          name?: string;
          /** @example 10 */
          status?: number;
          /**
           * Format: string
           * @example 3303cfc9-3e1d-11eb-89e0-0242ac180004
           */
          project_id?: string;
          /**
           * Format: string
           * @example 2020-12-16 10:00:00
           */
          start_date?: string;
          /**
           * Format: string
           * @example 2020-12-16 11:00:00
           */
          end_date?: string;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['task'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Удаление задачи */
  'AppHttpControllersApiV1TaskController::destroy': {
    parameters: {
      path: {
        /** @description ID задачи */
        id: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            /** @example true */
            data?: boolean;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Установсть обед */
  'AppHttpControllersApiV1UserDinnerController::store': {
    requestBody: {
      content: {
        'application/json': {
          /** @example 0bbf3f8a-64ac-4060-960f-79f1834838b2 */
          user_id: string;
          /** @example 2022-09-10 */
          date_from: string;
          /** @example 2022-09-10 */
          date_to: string;
          /** @example 12.5 */
          dinner_from?: Record<string, never>;
          /** @example 13 */
          dinner_to?: Record<string, never>;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            /** @example true */
            data?: boolean;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Статистика по затраченному времени */
  'AppHttpControllersApiV1UserStatisticsController::activities': {
    parameters: {
      query: {
        /** @description Дата в формает YYYY-MM-DD */
        date_from: string;
        /** @description Дата в формает YYYY-MM-DD */
        date_to: string;
        page?: string;
        pageCount?: string;
      };
      path: {
        /** @description Id пользователя */
        id: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: Record<string, never>[];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Статистика по затраченному времени */
  'AppHttpControllersApiV1UserStatisticsController::activitiesTotal': {
    parameters: {
      query: {
        /** @description Дата в формает YYYY-MM-DD */
        date_from: string;
        /** @description Дата в формает YYYY-MM-DD */
        date_to: string;
        page?: string;
      };
      path: {
        /** @description Id пользователя */
        id: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            /**
             * @example {
             *   "worktime": 108000,
             *   "plan": 64800,
             *   "dinner": 7200,
             *   "count": 44,
             *   "activity": 100,
             *   "step_active_time": 200
             * }
             */
            data?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Список активных вакансий для фильтра */
  'AppHttpControllersApiV1VacancyVacancyController::index': {
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: {
              /** @example e7ccda35-3699-4324-ab64-97f6f85de251 */
              id?: string;
              /** @example Монтажник */
              title?: string;
              /** @example ivanov@gmail.com */
              start_date?: string;
              /** @example 3434343 */
              end_date?: string;
              odd_week?: components['schemas']['Schedule'];
              even_week?: components['schemas']['Schedule'];
              /** @example 08:00 */
              workday_start?: Record<string, never>;
              /** @example 16:00 */
              workday_end?: Record<string, never>;
              /** @example 08:00 */
              dinner_start?: Record<string, never>;
              /** @example 16:00 */
              dinner_end?: Record<string, never>;
              /** @example 644 */
              payment?: Record<string, never>;
              /** @example 0 */
              pay_by_hours?: Record<string, never>;
              /** @example 0 */
              piece_work_payment?: Record<string, never>;
              /** @example 0 */
              show_stavka?: Record<string, never>;
              /** @example 2021-02-16T08:33:02.000000Z */
              recruitment_date?: Record<string, never>;
            };
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Статистика о времени работы по дням */
  'AppHttpControllersApiV1WorktimeController::index': {
    parameters: {
      query: {
        start_date?: string;
        end_date?: string;
        project_id?: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: {
              /**
               * Format: date
               * @description День
               * @example 2020-12-16
               */
              date?: string;
              /**
               * Format: date-time
               * @description Кол-во отработанных секунд
               * @example 123
               */
              cnt?: number;
            };
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Добавить отработанное время */
  'AppHttpControllersApiV1WorktimeController::create': {
    requestBody: {
      content: {
        'application/json': {
          /**
           * @description ID вакансии
           * @example 2e12c081-e098-453a-b766-090b5b4a8303
           */
          vacancy_id: string;
          /**
           * @description ID работника
           * @example 2e12c081-e098-453a-b766-090b5b4a8303
           */
          user_id: string;
          /**
           * @description День к которому записываем отработанные часы
           * @example 22-01-2021
           */
          date: string;
          /**
           * @description Кол-во секунд
           * @example 333
           */
          count: number;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['worktime'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Статистика о времени работы сегодня */
  'AppHttpControllersApiV1WorktimeController::today': {
    parameters: {
      query: {
        vacancy_id?: string;
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: {
              /**
               * Format: date-time
               * @description Временя начала рабочего дня
               * @example 2020-12-16 00:22:14
               */
              start_date?: string;
              /**
               * Format: date-time
               * @description Временя окончания или паузы рабочего дня
               * @example 2020-12-16 00:22:14
               */
              end_date?: string;
              /**
               * Format: date-time
               * @description Отработанное время в секундах
               * @example 222
               */
              count?: string;
              /**
               * @description end или pause, пауза или рабочий день закончен
               * @example end
               */
              stop_type?: string;
              /**
               * @description ID вакансии
               * @example 1112d808-0c93-4427-9e83-f89d76de516f
               */
              vacancy_id?: string;
            }[];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Начать рабочий день или продолжить после паузы */
  'AppHttpControllersApiV1WorktimeController::start': {
    requestBody: {
      content: {
        'application/json': {
          /**
           * Format: string
           * @example 3303cfc9-3e1d-11eb-89e0-0242ac180004
           */
          vacancy_id: string;
          /** @example true */
          notification?: boolean;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['worktime'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Поставить паузу */
  'AppHttpControllersApiV1WorktimeController::pause': {
    requestBody?: {
      content: {
        'application/json': {
          /** @example true */
          notification?: boolean;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['worktime'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Сначала нужно начать рабочее время */
      404: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Закончить рабочий день */
  'AppHttpControllersApiV1WorktimeController::stop': {
    requestBody?: {
      content: {
        'application/json': {
          /** @example true */
          notification?: boolean;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            boolen?: Record<string, never>;
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Сначала нужно начать рабочее время */
      404: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Вышли из рабочей зоны */
  'AppHttpControllersApiV1WorktimeController::areaLeave': {
    requestBody?: {
      content: {
        'application/json': {
          /** @example true */
          notification?: boolean;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['worktime'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Сначала нужно начать рабочее время */
      404: never;
      /** @description Validation error. */
      422: never;
    };
  };
  /** @description Изменить отработанное время */
  'AppHttpControllersApiV1WorktimeController::update': {
    parameters: {
      path: {
        /** @description ID записи времени */
        id: string;
      };
    };
    requestBody: {
      content: {
        'application/json': {
          /**
           * @description Кол-во секунд
           * @example 333
           */
          count: number;
        };
      };
    };
    responses: {
      /** @description successful operation */
      200: {
        content: {
          'application/json': {
            /** @example true */
            success?: boolean;
            data?: components['schemas']['worktime'];
          };
        };
      };
      /** @description Bad request */
      400: never;
      /** @description Authorization information is missing or invalid. */
      401: never;
      /** @description Validation error. */
      422: never;
    };
  };
}
